;;; ----------------------------------------------------------------------
;;; Copyright 2010-2011 National University of Ireland.
;;; ----------------------------------------------------------------------
;;; This file is part of DysVunctional Language.
;;; 
;;; DysVunctional Language is free software; you can redistribute it and/or modify
;;; it under the terms of the GNU Affero General Public License as
;;; published by the Free Software Foundation, either version 3 of the
;;;  License, or (at your option) any later version.
;;; 
;;; DysVunctional Language is distributed in the hope that it will be useful,
;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;; GNU General Public License for more details.
;;; 
;;; You should have received a copy of the GNU Affero General Public License
;;; along with DysVunctional Language.  If not, see <http://www.gnu.org/licenses/>.
;;; ----------------------------------------------------------------------

(define (nr-sqrt x)
  (letrec ((loop (lambda (y)
                   (let ((y-prime (- y (/ (- (* y y) x) (+ y y)))))
                     (if (<= (abs (- y y-prime)) 1e-5)
                         y
                         (loop y-prime))))))
    (loop (- (+ x 1.0) x))))

((derivative nr-sqrt) 4)


#|
(define raw-fol
  (show-time (lambda () (compile-to-raw-fol (dvl-source "examples/sqrt.dvl")))))

(define hairy-optimal (show-time (lambda () (fol-optimize raw-fol))))

(define done
  (show-time (lambda () (compile-to-fol (dvl-source "examples/sqrt.dvl")))))
|#
